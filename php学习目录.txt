教学/学习目录

第一篇：PHP基础知识
1，PHP开发环境、基本语句、注释；
2，PHP变量和数据类型
3，PHP操作符
4，PHP语法语句
5，PHP函数
6，PHP字符串常用操作
7，PHP数组常用操作
8，PHP文本处理
9，正则表达式
10，代码重用
11，面向对象编程，PHP类
12，异常错误处理
第二篇：MySQL知识
1，数据库基本概念
2，创建实例库
3，MySQL常用数据类型
4，MySQL常用操作(CURD)
5，连表操作
6，PHP与MySQL协作研发
第三篇：前端知识
1，HTMl标签
2，CSS使用
3，JS的基本语法、语句
4，JS的动态效果
5，JS与PHP前后端交互
6，初识Jquery
第四篇：高级进阶
1，PHP文件上载、图像处理
2，PHP的设计模式
3，PHP会话控制
4，PHP的其他特性及配置
5，MySQL的索引类型
6，MySQL的索引使用
7，MySQL的存储引擎
第五篇：项目实践
1，原生代码研发校园交易类系统
2，初识ThinkPHP框架/YII框架
3，框架研发宠物服务平台系统
第六篇：数据结构和算法
1，常用数据结构类型
2，常用排序算法
3，汉诺塔算法
4，最短路径算法
第七篇：面试技巧
1，面试注意事项
2，求职工作筛选
3，职业规划






















下面是PHP获取当前服务器信息的基本语句。
 
PHP程式版本： <?PHP echo PHP_VERSION; ?>
ZEND版本： <?PHP echo zend_version(); ?>
MYSQL支持： <?php echo function_exists (mysql_close)?"是":"否"; ?>
MySQL数据库持续连接 ： <?php echo @get_cfg_var("mysql.allow_persistent")?"是 ":"否"; ?>
MySQL最大连接数： <?php echo @get_cfg_var("mysql.max_links")==-1 ? "不限" : @get_cfg_var("mysql.max_links");?>
服务器操作系统： <?PHP echo PHP_OS; ?>
服务器端信息： <?PHP echo $_SERVER ['SERVER_SOFTWARE']; ?>
最大上传限制： <?PHP echo get_cfg_var ("upload_max_filesize")?get_cfg_var ("upload_max_filesize"):"不允许上传附件"; ?>
最 大执行时间： <?PHP echo get_cfg_var("max_execution_time")."秒 "; ?>
脚本运行占用最大内存： <?PHP echo get_cfg_var ("memory_limit")?get_cfg_var("memory_limit"):"无" ?>
查询当前连接的MYSQL数据库的版本 php自带函数 mysql_get_server_info()
获得服务器系统时间 date_default_timezone_set (PRC); echo date("Y-m-d G:i:s");
 
查询当前连接的MYSQL数据库的版本 php自带函数 mysql_get_server_info()
获得服务器系统时间 date_default_timezone_set (PRC); echo date("Y-m-d G:i:s");










匿名函数：
匿名函数(Anonymous functions)，也叫闭包函数(closures)，允许 临时创建一个没有指定名称的函数。最经常用作回调函数(callback)参数的值。


PHP_EOL常量是处理写日志系统的换行功能好用处




脚本之家下
首页 → 网络编程 → PHP编程 → php技巧 → PHP自动加载
https://www.jb51.net/article/166979.htm
更多关于PHP相关内容感兴趣的读者可查看本站专题：
《php面向对象程序设计入门教程》、      1
《PHP数组(Array)操作技巧大全》、         2
《PHP基本语法入门教程》、
《PHP运算与运算符用法总结》、
《php字符串(string)用法总结》、	3
《php+mysql数据库操作入门教程》及《php常见数据库操作技巧汇总》    4
多多议看











php在使用某个变量之前有没有必要先定义变量呢？

数组需要 防止空数据
字符串没必要
比较是弱类型语言嘛

sdk:就是面像软件开发者的的工具集(白话文就是封装数据)



PHP cURL 函数  模拟浏览器的数据传输工具
cURL: 链接是https开头需要以下配置
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);


PHP 面向对象：
	面向对象三大特性
 	 扩展性=继承、灵活性=多态>>1重写2父类引用指向子类对象3继承、重用性=封装
	1、不写构造方法和消毁方法和方法是自动继承的
	2、魔术方法：https://segmentfault.com/a/1190000007250604  魔术方法文章
	      2.1、 __set和__get 方法   访问属性不存在时调用
	      2.2、 __isset和__unset方法   配合使用isset和unset方法 访问 私有属性
	      2.3、__call方法   调用方法时不存在时被访问
	      2.4、__calStatic   调用静态方法时不存在时被访问
	      2.5、__destruct   在类外部调用unset方法进行释放对象变量
	      2.6、__toString   类被当作字符串进行输出
  	3、抽象类：如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。
	    3.1、抽象类表示的是一种继承关系，一个类只能继承一个抽象类，而一个类却可以实现多个接口
	4、接口：类描述对象的属性和方法。接口则包含类要实现的方法
	   4.1、接口来达到多继承的目的   比如：A>B   A>c  A>d    一个接口有多个实现子类
	   4.2、继承:只能继承一个父类，接口就解决了这个问题
	   4.3、面向接口编程，接口的引用指向实现类



$_SERVER的用法：
$_SERVER['PHP_SELF'] #当前正在执行脚本的文件名，与 document root相关。
$_SERVER['argv'] #传递给该脚本的参数。
$_SERVER['argc'] #包含传递给程序的命令行参数的个数（如果运行在命令行模式）。
$_SERVER['GATEWAY_INTERFACE'] #服务器使用的 CGI 规范的版本。例如，“CGI/1.1”。
$_SERVER['SERVER_NAME'] #当前运行脚本所在服务器主机的名称。
$_SERVER['SERVER_SOFTWARE'] #服务器标识的字串，在响应请求时的头部中给出。
$_SERVER['SERVER_PROTOCOL'] #请求页面时通信协议的名称和版本。例如，“HTTP/1.0”。
$_SERVER['REQUEST_METHOD'] #访问页面时的请求方法。例如：“GET”、“HEAD”，“POST”，“PUT”。
$_SERVER['QUERY_STRING'] #查询(query)的字符串。
$_SERVER['DOCUMENT_ROOT'] #当前运行脚本所在的文档根目录。在服务器配置文件中定义。
$_SERVER['HTTP_ACCEPT'] #当前请求的 Accept: 头部的内容。
$_SERVER['HTTP_ACCEPT_CHARSET'] #当前请求的 Accept-Charset: 头部的内容。例如：“iso-8859-1,*,utf-8”。
$_SERVER['HTTP_ACCEPT_ENCODING'] #当前请求的 Accept-Encoding: 头部的内容。例如：“gzip”。
$_SERVER['HTTP_ACCEPT_LANGUAGE']#当前请求的 Accept-Language: 头部的内容。例如：“en”。
$_SERVER['HTTP_CONNECTION'] #当前请求的 Connection: 头部的内容。例如：“Keep-Alive”。
$_SERVER['HTTP_HOST'] #当前请求的 Host: 头部的内容。
$_SERVER['HTTP_REFERER'] #链接到当前页面的前一页面的 URL 地址。
$_SERVER['HTTP_USER_AGENT'] #当前请求的 User_Agent: 头部的内容。
$_SERVER['HTTPS'] — 如果通过https访问,则被设为一个非空的值(on)，否则返回off
$_SERVER['REMOTE_ADDR'] #正在浏览当前页面用户的 IP 地址。
$_SERVER['REMOTE_HOST'] #正在浏览当前页面用户的主机名。
$_SERVER['REMOTE_PORT'] #用户连接到服务器时所使用的端口。
$_SERVER['SCRIPT_FILENAME'] #当前执行脚本的绝对路径名。
$_SERVER['SERVER_ADMIN'] #管理员信息
$_SERVER['SERVER_PORT'] #服务器所使用的端口
$_SERVER['SERVER_SIGNATURE'] #包含服务器版本和虚拟主机名的字符串。
$_SERVER['PATH_TRANSLATED'] #当前脚本所在文件系统（不是文档根目录）的基本路径。
$_SERVER['SCRIPT_NAME'] #包含当前脚本的路径。这在页面需要指向自己时非常有用。
$_SERVER['REQUEST_URI'] #访问此页面所需的 URI。例如，“/index.html”。
$_SERVER['PHP_AUTH_USER'] #当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的用户名。
$_SERVER['PHP_AUTH_PW'] #当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的密码。
$_SERVER['AUTH_TYPE'] #当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是认证的类型。
$_SERVER[”HTTP_X_FORWARDED_FOR”] #透过代理服务器取得客户端的真实 IP 地址
$_SERVER['HTTP_VIA'] #代理服务器IP
$_SERVER['HTTP_CLIENT_IP'] #客户端IP






php开发之socket网络编程  
tcp/udp/ip等介绍：
https://blog.csdn.net/qq_33716731/article/details/87255889